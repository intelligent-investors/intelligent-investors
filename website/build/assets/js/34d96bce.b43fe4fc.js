"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9887],{8438:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>m});var s=n(4848),t=n(8453);const i={},o="Sampling and Estimation",r={id:"cfa/sampling-and-estimation",title:"Sampling and Estimation",description:"This topic review covers random samples and inferences about population means from sample data. It is essential that you know the central limit theorem, for it allows us to use sampling statistics to construct confidence intervals for point estimates of population means. Make sure you can calculate confidence intervals for population means given sample parameter estimates and a level of significance, and know when it is appropriate to use the $z$-statistic versus the $t$-statistic. You should also understand the basic procedures for creating random samples, and recognize the warning signs of various sampling biases from nonrandom samples.",source:"@site/docs/cfa/sampling-and-estimation.mdx",sourceDirName:"cfa",slug:"/cfa/sampling-and-estimation",permalink:"/intelligent-investors/website/build/docs/cfa/sampling-and-estimation",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{}},l={},m=[{value:"1: CENTRAL LIMIT THEORM AND STANDARD ERROR",id:"1-central-limit-theorm-and-standard-error",level:2},{value:"A: Define simple random sampling and a sampling distribution.",id:"a-define-simple-random-sampling-and-a-sampling-distribution",level:3},{value:"B: Explain sampling error.",id:"b-explain-sampling-error",level:3}];function c(e){const a={annotation:"annotation",h1:"h1",h2:"h2",h3:"h3",math:"math",mi:"mi",mrow:"mrow",p:"p",semantics:"semantics",span:"span",strong:"strong",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.h1,{id:"sampling-and-estimation",children:"Sampling and Estimation"}),"\n",(0,s.jsxs)(a.p,{children:["This topic review covers random samples and inferences about population means from sample data. It is essential that you know the central limit theorem, for it allows us to use sampling statistics to construct confidence intervals for point estimates of population means. Make sure you can calculate confidence intervals for population means given sample parameter estimates and a level of significance, and know when it is appropriate to use the ",(0,s.jsxs)(a.span,{className:"katex",children:[(0,s.jsx)(a.span,{className:"katex-mathml",children:(0,s.jsx)(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(a.semantics,{children:[(0,s.jsx)(a.mrow,{children:(0,s.jsx)(a.mi,{children:"z"})}),(0,s.jsx)(a.annotation,{encoding:"application/x-tex",children:"z"})]})})}),(0,s.jsx)(a.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(a.span,{className:"base",children:[(0,s.jsx)(a.span,{className:"strut",style:{height:"0.4306em"}}),(0,s.jsx)(a.span,{className:"mord mathnormal",style:{marginRight:"0.04398em"},children:"z"})]})})]}),"-statistic versus the ",(0,s.jsxs)(a.span,{className:"katex",children:[(0,s.jsx)(a.span,{className:"katex-mathml",children:(0,s.jsx)(a.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(a.semantics,{children:[(0,s.jsx)(a.mrow,{children:(0,s.jsx)(a.mi,{children:"t"})}),(0,s.jsx)(a.annotation,{encoding:"application/x-tex",children:"t"})]})})}),(0,s.jsx)(a.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(a.span,{className:"base",children:[(0,s.jsx)(a.span,{className:"strut",style:{height:"0.6151em"}}),(0,s.jsx)(a.span,{className:"mord mathnormal",children:"t"})]})})]}),"-statistic. You should also understand the basic procedures for creating random samples, and recognize the warning signs of various sampling biases from nonrandom samples."]}),"\n",(0,s.jsx)(a.h2,{id:"1-central-limit-theorm-and-standard-error",children:"1: CENTRAL LIMIT THEORM AND STANDARD ERROR"}),"\n",(0,s.jsx)(a.p,{children:"In many real-world statistics applications, it is impractical (or impossible) to study an entire population. When this is the case, a subgroup of the population, called a sample, can be evaluated. Based upon this sample, the parameters of the underlying population can be estimated."}),"\n",(0,s.jsx)(a.p,{children:"For example, rather than attempting to measure the performance of the U.S. stock market by observing the performance of all 10,000 or so stocks trading in the United States at any one time, the performance of the subgroup of 500 stocks in the S&P 500 can be measured. The results of the statistical analysis of this sample can then be used to draw conclusions about the entire population of U.S. stocks."}),"\n",(0,s.jsx)(a.h3,{id:"a-define-simple-random-sampling-and-a-sampling-distribution",children:"A: Define simple random sampling and a sampling distribution."}),"\n",(0,s.jsx)(a.h3,{id:"b-explain-sampling-error",children:"B: Explain sampling error."}),"\n",(0,s.jsxs)(a.p,{children:[(0,s.jsx)(a.strong,{children:"Simple random sampling"})," is a method of selecting a sample in such a way that each item or person in the population being studied has the same likelihood of being included in the sample. As an example of simple random sampling, assume that you want to draw a sample of five items out of a group of 50 items. This can be accomplished by numbering each of the 50 items, placing them in a hat, and shaking the hat. Next, one number can be drawn randomly from the hat. Repeating this process (experiment) four more times results in a set of five numbers. The five drawn numbers (items) comprise a simple random sample from the population. In applications like this one, a random-number table or a computer random-"]})]})}function p(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,a,n)=>{n.d(a,{R:()=>o,x:()=>r});var s=n(6540);const t={},i=s.createContext(t);function o(e){const a=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);